import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import {
  fetchFiles,
  deleteFile,
  updateFileComment,
  renameFile
} from '../store/filesSlice';
import FileUploadForm from '../components/FileUploadForm';
import FileItem from '../components/FileItem';
import { Spin, Alert, Empty, message } from 'antd';
import { useIsMobile } from '../hooks/useIsMobile';
import { downloadFileApi, copyFileLinkApi } from '../utils/api';


export default function StoragePage() {
  const dispatch = useDispatch();
  const { files, loading, error, loadingIds } = useSelector(state => state.files);
  const isMobile = useIsMobile();


  useEffect(() => {
    dispatch(fetchFiles());
  }, [dispatch]);


  const handleDelete = id => {
    dispatch(deleteFile(id));
  };


  const handleUpdateComment = (fileId, comment) => {
    dispatch(updateFileComment({ fileId, comment }));
  };


  const handleRename = (fileId, newName) => {
    dispatch(renameFile({ fileId, newName }));
  };


  const handleDownload = async file => {
    try {
      const blob = await downloadFileApi(file.id);
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = file.original_name || file.name || 'download';
      document.body.appendChild(a);
      a.click();
      a.remove();
      URL.revokeObjectURL(url);
      message.success('–§–∞–π–ª —Å–∫–∞—á–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    } catch (err) {
      console.error('Download error:', err);
      message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞');
    }
  };


const handleCopyLink = async file => {
  // v2: Fixed clipboard API for HTTP
  try {
    const response = await copyFileLinkApi(file.id);
    const link = response?.data?.public_url || 
             response?.public_url || 
             response?.data?.link ||
             response?.link ||
             file.public_url ||
             `http://83.166.245.17/storage/files/${file.id}`;
    
    // –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
    const textArea = document.createElement('textarea');
    textArea.value = link;
    textArea.style.position = 'fixed';
    textArea.style.left = '-999999px';
    textArea.style.top = '-999999px';
    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();
    
    // –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
    let success = false;
    try {
      success = document.execCommand('copy');
    } catch (err) {
      console.log('execCommand failed:', err);
    }
    
    document.body.removeChild(textArea);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º message.info –¥–ª—è –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if (success) {
      message.info('‚úÖ –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞: ' + link);
    } else {
      message.info('üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É: ' + link);
    }
  } catch (err) {
    console.error('Copy link error:', err);
    message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏');
  }
};



  return (
    <div style={{ padding: 24 }}>
      <h2>–í–∞—à–µ —Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ</h2>


      <FileUploadForm />


      {loading && (
        <div style={{ textAlign: 'center', marginTop: 24 }}>
          <Spin size="large" tip="–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤..." />
        </div>
      )}


      {error && (
        <Alert
          type="error"
          message="–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤"
          description={error}
          showIcon
          style={{ margin: '16px 0' }}
        />
      )}


      {!loading && files.length === 0 && (
        <Empty
          description="–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
          style={{ margin: '40px 0' }}
        />
      )}


      {!loading && files.length > 0 && (
        isMobile ? (
          files.map(file => (
            <FileItem
              key={file.id}
              file={file}
              isMobile
              loading={loadingIds.includes(file.id)}
              onDelete={handleDelete}
              onDownload={handleDownload}
              onCopyLink={handleCopyLink}
              onUpdateComment={handleUpdateComment}
              onRename={handleRename}
            />
          ))
        ) : (
          <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: 16 }}>
            <thead>
              <tr>
                <th style={{ textAlign: 'left', padding: 8, borderBottom: '1px solid #f0f0f0' }}>–§–∞–π–ª</th>
                <th style={{ textAlign: 'left', padding: 8, borderBottom: '1px solid #f0f0f0' }}>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</th>
                <th style={{ textAlign: 'left', padding: 8, borderBottom: '1px solid #f0f0f0' }}>–î–∞—Ç–∞</th>
                <th style={{ textAlign: 'left', padding: 8, borderBottom: '1px solid #f0f0f0' }}>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody>
              {files.map(file => (
                <FileItem
                  key={file.id}
                  file={file}
                  loading={loadingIds.includes(file.id)}
                  onDelete={handleDelete}
                  onDownload={handleDownload}
                  onCopyLink={handleCopyLink}
                  onUpdateComment={handleUpdateComment}
                  onRename={handleRename}
                />
              ))}
            </tbody>
          </table>
        )
      )}
    </div>
  );
}
