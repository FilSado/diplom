import React, { useState } from 'react';
import { useSelector } from 'react-redux';
import { hasAccess } from '../utils/auth';
import {
  Button,
  Input,
  Tooltip,
  message,
  Popconfirm,
  Space,
  Typography,
  Card,
  Modal
} from 'antd';
import {
  EditOutlined,
  SaveOutlined,
  CloseOutlined,
  DeleteOutlined,
  DownloadOutlined,
  LinkOutlined,
  CalendarOutlined,
  FileTextOutlined
} from '@ant-design/icons';

const { Text, Paragraph } = Typography;
const { TextArea } = Input;

export default function FileItem({
  file,
  onDelete,
  onDownload,
  onCopyLink,
  onUpdateComment,
  onRename,
  loading = false,
  isMobile = false
}) {
  const user = useSelector(state => state.auth.user);
  const isOwnerOrAdmin = hasAccess(user, ['admin']) || user?.id === file.user_id;

  const [isEditing, setIsEditing] = useState(false);
  const [comment, setComment] = useState(file.comment || '');
  const [isLoading, setIsLoading] = useState(false);
  const [isRenameModalOpen, setIsRenameModalOpen] = useState(false);
  const [newName, setNewName] = useState(file.original_name);

  const saveComment = async () => {
    if (comment.length > 500) {
      message.error('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤)');
      return;
    }
    setIsLoading(true);
    try {
      await onUpdateComment(file.id, comment);
      setIsEditing(false);
      message.success('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω');
    } catch {
      message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è');
    } finally {
      setIsLoading(false);
    }
  };

  const handleCopyLink = () => {
    if (onCopyLink) {
      onCopyLink(file);
    } else {
      message.error('–§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }
};

  const handleDownloadClick = () => onDownload(file);

  const handleDeleteClick = () => onDelete(file.id);

  const openRenameModal = () => {
    setNewName(file.original_name);
    setIsRenameModalOpen(true);
  };

  const handleRename = async () => {
    if (!newName.trim()) {
      message.error('–ò–º—è —Ñ–∞–π–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      return;
    }
    setIsLoading(true);
    try {
      await onRename(file.id, newName.trim());
      setIsRenameModalOpen(false);
      message.success('–ò–º—è —Ñ–∞–π–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–æ');
    } catch {
      message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞');
    } finally {
      setIsLoading(false);
    }
  };

  const formatFileSize = bytes => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return `${(bytes / Math.pow(k, i)).toFixed(2)} ${sizes[i]}`;
  };

  const formatDate = () => {
    const dateString = file.last_download;
    if (!dateString) return '–î–∞—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
    try {
      return new Date(dateString).toLocaleDateString('ru-RU', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });
    } catch {
      return '–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞';
    }
  };

  const getFileIcon = filename => {
    const ext = filename?.split('.').pop()?.toLowerCase();
    if (['jpg','jpeg','png','gif','webp','svg'].includes(ext)) return 'üñºÔ∏è';
    if (ext === 'pdf') return 'üìÑ';
    if (['doc','docx'].includes(ext)) return 'üìù';
    if (['xls','xlsx'].includes(ext)) return 'üìä';
    if (['zip','rar','7z'].includes(ext)) return 'üóúÔ∏è';
    return 'üìÅ';
  };

  const renameModal = (
    <Modal
      title="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ñ–∞–π–ª"
      open={isRenameModalOpen}
      onOk={handleRename}
      onCancel={() => setIsRenameModalOpen(false)}
      okText="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
      cancelText="–û—Ç–º–µ–Ω–∞"
      confirmLoading={isLoading}
    >
      <Input
        value={newName}
        onChange={e => setNewName(e.target.value)}
        maxLength={255}
        placeholder="–ù–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞"
      />
    </Modal>
  );

  // Mobile card view
  if (isMobile) {
    return (
      <>
        <Card
          size="small"
          style={{ marginBottom: 16 }}
          actions={[
            <Tooltip title="–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª" key="download">
              <Button
                type="text"
                icon={<DownloadOutlined />}
                onClick={handleDownloadClick}
                loading={loading}
                aria-label="—Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª"
                aria-busy={loading}
              />
            </Tooltip>,
            <Tooltip title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É" key="link">
              <Button
                type="text"
                icon={<LinkOutlined />}
                onClick={handleCopyLink}
                aria-label="–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É"
              />
            </Tooltip>,
            isOwnerOrAdmin && (
              <Tooltip title="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å" key="rename">
                <Button
                  type="text"
                  icon={<EditOutlined />}
                  onClick={openRenameModal}
                  aria-label="–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å"
                />
              </Tooltip>
            ),
            isOwnerOrAdmin && (
              <Popconfirm
                key="delete"
                title="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª?"
                onConfirm={handleDeleteClick}
                okText="–î–∞"
                cancelText="–ù–µ—Ç"
                okButtonProps={{ loading }}
              >
                <Tooltip title="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª">
                  <Button 
                  type="text"
                  danger
                  icon={<DeleteOutlined />}
                  disabled={loading}
                  aria-label="—É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª"
                />
                </Tooltip>
              </Popconfirm>
            )
          ].filter(Boolean)}
        >
          <Space>
            <span style={{ fontSize: 20 }}>{getFileIcon(file.original_name)}</span>
            <div>
              <Text strong>{file.original_name}</Text><br/>
              <Text type="secondary" style={{ fontSize: 12 }}>
                {formatFileSize(file.size)}
              </Text>
            </div>
          </Space>
          <div style={{ marginTop: 12 }}>
            <Space direction="vertical" size="small" style={{ width: '100%' }}>
              <div>
                <CalendarOutlined />{' '}
                <Text type="secondary" style={{ fontSize: 12 }}>
                  {formatDate()}
                </Text>
              </div>
              <div>
                <FileTextOutlined />{' '}
                {isEditing ? (
                  <>
                    <TextArea
                      value={comment}
                      onChange={e => setComment(e.target.value)}
                      maxLength={500}
                      showCount
                      rows={2}
                      disabled={isLoading}
                      style={{ marginBottom: 8 }}
                    />
                    <Space>
                      <Button
                        type="primary"
                        size="small"
                        icon={<SaveOutlined />}
                        onClick={saveComment}
                        loading={isLoading}
                      >
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                      </Button>
                      <Button
                        size="small"
                        icon={<CloseOutlined />}
                        onClick={() => {
                          setIsEditing(false);
                          setComment(file.comment || '');
                        }}
                        disabled={isLoading}
                      >
                        –û—Ç–º–µ–Ω–∞
                      </Button>
                    </Space>
                  </>
                ) : (
                  <>
                    <Paragraph ellipsis={{ rows: 2, expandable: true }} style={{ margin: 0 }}>
                      {comment || <em>–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è</em>}
                    </Paragraph>
                    {isOwnerOrAdmin && (
                      <Button
                        type="link"
                        size="small"
                        icon={<EditOutlined />}
                        onClick={() => setIsEditing(true)}
                        style={{ padding: 0, height: 'auto' }}
                      >
                        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                      </Button>
                    )}
                  </>
                )}
              </div>
            </Space>
          </div>
        </Card>
        {renameModal}
      </>
    );
  }

  // Desktop table row view
  return (
    <>
      <tr>
        <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>
          <Space>
            <span style={{ fontSize: 18 }}>{getFileIcon(file.original_name)}</span>
            <div>
              <Text strong>{file.original_name}</Text><br/>
              <Text type="secondary" style={{ fontSize: 12 }}>
                {formatFileSize(file.size)}
              </Text>
            </div>
          </Space>
        </td>
        <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>
          {isEditing ? (
            <>
              <TextArea
                value={comment}
                onChange={e => setComment(e.target.value)}
                maxLength={500}
                showCount
                rows={2}
                disabled={isLoading}
                style={{ marginBottom: 8 }}
              />
              <Space>
                <Button
                  type="primary"
                  size="small"
                  icon={<SaveOutlined />}
                  onClick={saveComment}
                  loading={isLoading}
                >
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </Button>
                <Button
                  size="small"
                  icon={<CloseOutlined />}
                  onClick={() => {
                    setIsEditing(false);
                    setComment(file.comment || '');
                  }}
                  disabled={isLoading}
                >
                  –û—Ç–º–µ–Ω–∞
                </Button>
              </Space>
            </>
          ) : (
            <>
              <Paragraph ellipsis={{ rows: 2, expandable: true }} style={{ margin: 0 }}>
                {comment || <em>–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è</em>}
              </Paragraph>
              {isOwnerOrAdmin && (
                <Button
                  type="link"
                  size="small"
                  icon={<EditOutlined />}
                  onClick={() => setIsEditing(true)}
                  style={{ padding: 0, height: 'auto' }}
                >
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </Button>
              )}
            </>
          )}
        </td>
        <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>
          <Text type="secondary">{formatDate()}</Text>
        </td>
        <td style={{ padding: 8, borderBottom: '1px solid #f0f0f0' }}>
          <Space>
            <Tooltip title="–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª">
              <Button
                aria-label="—Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª"
                type="primary"
                ghost
                icon={<DownloadOutlined />}
                onClick={handleDownloadClick}
                loading={loading}
                aria-busy={loading}
              />
            </Tooltip>
            <Tooltip title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É">
              <Button
                icon={<LinkOutlined />}
                onClick={handleCopyLink}
                aria-label="–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É"
                aria-busy={loading}
              />
            </Tooltip>
            {isOwnerOrAdmin && (
              <Tooltip title="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å">
                <Button 
                  icon={<EditOutlined />}
                  onClick={openRenameModal}
                  aria-label="–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å"
                 />
              </Tooltip>
            )}
            {isOwnerOrAdmin && (
              <Popconfirm
                title="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª?"
                onConfirm={handleDeleteClick}
                okText="–î–∞"
                cancelText="–ù–µ—Ç"
                okButtonProps={{ loading }}
              >
                <Tooltip title="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª">
                  <Button
                  danger
                  icon={<DeleteOutlined />}
                  disabled={loading}
                  aria-label="—É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª"
                  aria-busy={loading}
                />
                </Tooltip>
              </Popconfirm>
            )}
          </Space>
        </td>
      </tr>
      {renameModal}
    </>
  );
}
